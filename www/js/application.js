// Generated by CoffeeScript 1.6.2
(function() {
  var MultipleChoiceQuestion, NumericQuestion, Question, Quiz, getLocalized, localization,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Quiz = (function() {
    function Quiz() {
      this.set_current = __bind(this.set_current, this);
      this.save = __bind(this.save, this);
      var _this = this;

      this.questions = ko.observableArray([]);
      this.current_question = new Question();
      this.current_index = ko.observable(1);
      this.current_index.subscribe(function(old_index) {
        return _this.save(_this.current_question(), old_index);
      }, window.model, 'beforechange');
      this.current_index.subscribe(function(new_index) {
        console.log('index changed');
        return _this.set_current(new_index);
      });
    }

    Quiz.prototype.save = function(question, index) {
      var _base;

      (_base = this.questions)[index] || (_base[index] = new Question());
      return this.question[index].copy(question);
    };

    Quiz.prototype.set_current = function(index) {
      var _base;

      (_base = this.questions)[index] || (_base[index] = new Question());
      return this.current_question.copy(this.questions[index]);
    };

    return Quiz;

  })();

  Question = (function() {
    function Question() {
      this.copy = __bind(this.copy, this);      this.question_text = ko.observable('');
      this.type = ko.observable('multiple-choice');
      this.specific = ko.observable(new MultipleChoiceQuestion);
      this.type.subscribe(function(new_type) {
        switch (new_type) {
          case 'multiple-choice':
            return new MultipleChoiceQuestion;
          case 'numeric':
            return new NumericQuestion;
        }
      }, window.model);
    }

    Question.prototype.copy = function(copying) {
      this.question_text(copying.question_text());
      this.type(copying.type());
      return this.specific().copy(copying.specific());
    };

    return Question;

  })();

  MultipleChoiceQuestion = (function() {
    function MultipleChoiceQuestion() {
      this.copy = __bind(this.copy, this);      this.correct_answer = ko.observable('');
      this.wrong_answers = ko.observableArray();
    }

    MultipleChoiceQuestion.prototype.copy = function(copying) {
      this.correct_answer(copying.correct_answer());
      return this.wrong_answers(copying.wrong_answers());
    };

    return MultipleChoiceQuestion;

  })();

  NumericQuestion = (function() {
    function NumericQuestion() {
      this.copy = __bind(this.copy, this);      this.correct_answer = ko.observable();
      this.tolerance = ko.observable(0);
    }

    NumericQuestion.prototype.copy = function(copying) {
      this.correct_answer(copying.correct_answer());
      return this.tolerance(copying.tolerance());
    };

    return NumericQuestion;

  })();

  window.addEventListener('load', function() {
    return new FastClick(document.body);
  }, false);

  document.addEventListener('deviceready', function() {
    return navigator.splashscreen.hide();
  }, false);

  $(document).on('pageinit', function() {
    window.model = {
      l: getLocalized(),
      quiz: new Quiz()
    };
    return ko.applyBindings(model);
  });

  getLocalized = function() {
    var locale;

    locale = (navigator.language || navigator.userLanguage).substring(0, 2);
    return localization[locale];
  };

  localization = {
    en: {
      wrong_answer: "Wrong Answer",
      wrong_answers: "Wrong Answers",
      correct_answer: "Correct Answer",
      add_wrong_answer: "Add wrong Answer",
      question_text: "Question Text",
      type: "Type",
      numeric: "Numeric",
      multiple_choice: "Multiple-Choice",
      play: "Play",
      share: "Share",
      create: "Create",
      delete_question: "Delete Question",
      menu: "Menu",
      play: "Play",
      share: "Share",
      create: "Create"
    },
    de: {
      wrong_answer: "Falsche Antwort",
      wrong_answers: "Falsche Antworten",
      correct_answer: "Richtige Antwort",
      add_wrong_answer: "Falsche Antwort hinzufügen",
      question_text: "Frage",
      type: "Typ",
      numeric: "Zahlen",
      multiple_choice: "Multiple-Choice",
      play: "Spielen",
      share: "Teilen",
      create: "Kreieren",
      delete_question: "Frage löschen",
      menu: "Menü",
      play: "Spielen",
      share: "Teilen",
      create: "Kreieren"
    }
  };

}).call(this);
